{"ast":null,"code":"import { FILTER_INFO } from \"../constants/action-types\";\nimport info from \"../../data/data\";\nconst initialState = {\n  info: info,\n  keyword: \"\"\n};\nconst keys = [\"calendar\", \"contacts\", \"dropbox\", \"slack\", \"tweet\"];\n\nfunction filterInfo(state, keyword) {\n  var filteredIndo = {};\n  keys.forEach(k => filteredIndo[k] = initialState.info[k].filter(i => i.matching_terms.includes(keyword)));\n  return { ...state,\n    keyword: keyword,\n    info: filteredIndo\n  };\n}\n\nfunction rootReducer(state = {}, action) {\n  if (action.type === FILTER_INFO) {\n    return filterInfo(state, action.payload);\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/sharathchandrareddy/Desktop/assignment/src/js/reducers/index.js"],"names":["FILTER_INFO","info","initialState","keyword","keys","filterInfo","state","filteredIndo","forEach","k","filter","i","matching_terms","includes","rootReducer","action","type","payload"],"mappings":"AAAA,SAASA,WAAT,QAA4B,2BAA5B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,MAAMC,YAAY,GAAG;AACnBD,EAAAA,IAAI,EAAEA,IADa;AAEnBE,EAAAA,OAAO,EAAE;AAFU,CAArB;AAKA,MAAMC,IAAI,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,SAAzB,EAAoC,OAApC,EAA6C,OAA7C,CAAb;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2BH,OAA3B,EAAoC;AAClC,MAAII,YAAY,GAAG,EAAnB;AACAH,EAAAA,IAAI,CAACI,OAAL,CACGC,CAAD,IACGF,YAAY,CAACE,CAAD,CAAZ,GAAkBP,YAAY,CAACD,IAAb,CAAkBQ,CAAlB,EAAqBC,MAArB,CAA6BC,CAAD,IAC7CA,CAAC,CAACC,cAAF,CAAiBC,QAAjB,CAA0BV,OAA1B,CADiB,CAFvB;AAMA,SAAO,EACL,GAAGG,KADE;AAELH,IAAAA,OAAO,EAAEA,OAFJ;AAGLF,IAAAA,IAAI,EAAEM;AAHD,GAAP;AAKD;;AAED,SAASO,WAAT,CAAqBR,KAAK,GAAG,EAA7B,EAAiCS,MAAjC,EAAyC;AACvC,MAAIA,MAAM,CAACC,IAAP,KAAgBhB,WAApB,EAAiC;AAC/B,WAAOK,UAAU,CAACC,KAAD,EAAQS,MAAM,CAACE,OAAf,CAAjB;AACD;;AACD,SAAOX,KAAP;AACD;;AAED,eAAeQ,WAAf","sourcesContent":["import { FILTER_INFO } from \"../constants/action-types\";\nimport info from \"../../data/data\";\n\nconst initialState = {\n  info: info,\n  keyword: \"\",\n};\n\nconst keys = [\"calendar\", \"contacts\", \"dropbox\", \"slack\", \"tweet\"];\n\nfunction filterInfo(state, keyword) {\n  var filteredIndo = {};\n  keys.forEach(\n    (k) =>\n      (filteredIndo[k] = initialState.info[k].filter((i) =>\n        i.matching_terms.includes(keyword)\n      ))\n  );\n  return {\n    ...state,\n    keyword: keyword,\n    info: filteredIndo,\n  };\n}\n\nfunction rootReducer(state = {}, action) {\n  if (action.type === FILTER_INFO) {\n    return filterInfo(state, action.payload);\n  }\n  return state;\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}