{"ast":null,"code":"import React from\"react\";import SearchBar from\"./searchBar\";import SearchResults from\"./searchResults\";import{connect}from\"react-redux\";import _ from\"underscore\";import{filterInfo as _filterInfo}from\"../js/actions\";var mapStateToProps=function mapStateToProps(state){return{info:state?state.info||{}:{},keyword:state?state.keyword:\"\"};};function mapDispatchToProps(dispatch){return{filterInfo:function filterInfo(value){return dispatch(_filterInfo(value));}};}var ConnectedContents=function ConnectedContents(props){var contentsContainer={display:\"flex\",flexDirection:\"column\"};var searchBarContainer={marginTop:\"20px\"};var searchResultsContainer={marginTop:\"20px\"};var keys=[\"calendar\",\"contacts\",\"dropbox\",\"slack\",\"tweet\"];var results=_.flatten(keys.map(function(k){return props.info[k];}));var updateKey=function updateKey(value){props.filterInfo(value);};return/*#__PURE__*/React.createElement(\"div\",{style:contentsContainer},/*#__PURE__*/React.createElement(\"div\",{style:searchBarContainer},/*#__PURE__*/React.createElement(SearchBar,{input:props.keyword,setInput:updateKey})),/*#__PURE__*/React.createElement(\"div\",{style:searchResultsContainer},/*#__PURE__*/React.createElement(SearchResults,{results:results})));};var Contents=connect(mapStateToProps,mapDispatchToProps)(ConnectedContents);export default Contents;","map":{"version":3,"sources":["/Users/sharathchandrareddy/Desktop/assignment/src/components/contents.jsx"],"names":["React","SearchBar","SearchResults","connect","_","filterInfo","mapStateToProps","state","info","keyword","mapDispatchToProps","dispatch","value","ConnectedContents","props","contentsContainer","display","flexDirection","searchBarContainer","marginTop","searchResultsContainer","keys","results","flatten","map","k","updateKey","Contents"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,CAAP,KAAc,YAAd,CACA,OAASC,UAAU,GAAVA,CAAAA,WAAT,KAA2B,eAA3B,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,IAAI,CAAED,KAAK,CAAGA,KAAK,CAACC,IAAN,EAAc,EAAjB,CAAsB,EAD5B,CAELC,OAAO,CAAEF,KAAK,CAAGA,KAAK,CAACE,OAAT,CAAmB,EAF5B,CAAP,CAID,CALD,CAOA,QAASC,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CACpC,MAAO,CACLN,UAAU,CAAE,oBAACO,KAAD,QAAWD,CAAAA,QAAQ,CAACN,WAAU,CAACO,KAAD,CAAX,CAAnB,EADP,CAAP,CAGD,CAED,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACnC,GAAMC,CAAAA,iBAAiB,CAAG,CACxBC,OAAO,CAAE,MADe,CAExBC,aAAa,CAAE,QAFS,CAA1B,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,CACzBC,SAAS,CAAE,MADc,CAA3B,CAGA,GAAMC,CAAAA,sBAAsB,CAAG,CAC7BD,SAAS,CAAE,MADkB,CAA/B,CAIA,GAAIE,CAAAA,IAAI,CAAG,CAAC,UAAD,CAAa,UAAb,CAAyB,SAAzB,CAAoC,OAApC,CAA6C,OAA7C,CAAX,CACA,GAAIC,CAAAA,OAAO,CAAGlB,CAAC,CAACmB,OAAF,CAAUF,IAAI,CAACG,GAAL,CAAS,SAACC,CAAD,QAAOX,CAAAA,KAAK,CAACN,IAAN,CAAWiB,CAAX,CAAP,EAAT,CAAV,CAAd,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACd,KAAD,CAAW,CAC3BE,KAAK,CAACT,UAAN,CAAiBO,KAAjB,EACD,CAFD,CAIA,mBACE,2BAAK,KAAK,CAAEG,iBAAZ,eACE,2BAAK,KAAK,CAAEG,kBAAZ,eACE,oBAAC,SAAD,EAAW,KAAK,CAAEJ,KAAK,CAACL,OAAxB,CAAiC,QAAQ,CAAEiB,SAA3C,EADF,CADF,cAIE,2BAAK,KAAK,CAAEN,sBAAZ,eACE,oBAAC,aAAD,EAAe,OAAO,CAAEE,OAAxB,EADF,CAJF,CADF,CAUD,CA7BD,CA+BA,GAAMK,CAAAA,QAAQ,CAAGxB,OAAO,CACtBG,eADsB,CAEtBI,kBAFsB,CAAP,CAGfG,iBAHe,CAAjB,CAIA,cAAec,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport SearchBar from \"./searchBar\";\nimport SearchResults from \"./searchResults\";\nimport { connect } from \"react-redux\";\nimport _ from \"underscore\";\nimport { filterInfo } from \"../js/actions\";\n\nconst mapStateToProps = (state) => {\n  return {\n    info: state ? state.info || {} : {},\n    keyword: state ? state.keyword : \"\",\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    filterInfo: (value) => dispatch(filterInfo(value)),\n  };\n}\n\nconst ConnectedContents = (props) => {\n  const contentsContainer = {\n    display: \"flex\",\n    flexDirection: \"column\",\n  };\n  const searchBarContainer = {\n    marginTop: \"20px\",\n  };\n  const searchResultsContainer = {\n    marginTop: \"20px\",\n  };\n\n  var keys = [\"calendar\", \"contacts\", \"dropbox\", \"slack\", \"tweet\"];\n  var results = _.flatten(keys.map((k) => props.info[k]));\n\n  const updateKey = (value) => {\n    props.filterInfo(value);\n  };\n\n  return (\n    <div style={contentsContainer}>\n      <div style={searchBarContainer}>\n        <SearchBar input={props.keyword} setInput={updateKey} />\n      </div>\n      <div style={searchResultsContainer}>\n        <SearchResults results={results} />\n      </div>\n    </div>\n  );\n};\n\nconst Contents = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedContents);\nexport default Contents;\n"]},"metadata":{},"sourceType":"module"}