{"ast":null,"code":"import _objectSpread from\"/Users/sharathchandrareddy/Desktop/assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{FILTER_INFO}from\"../constants/action-types\";import info from\"../../data/data\";var initialState={info:info,keyword:\"\"};var keys=[\"calendar\",\"contacts\",\"dropbox\",\"slack\",\"tweet\"];function filterInfo(state,keyword){var filteredIndo={};keys.forEach(function(k){return filteredIndo[k]=initialState.info[k].filter(function(i){return i.matching_terms.includes(keyword);});});return _objectSpread(_objectSpread({},state),{},{keyword:keyword,info:filteredIndo});}function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;if(action.type===FILTER_INFO){return filterInfo(state,action.payload);}return state;}export default rootReducer;","map":{"version":3,"sources":["/Users/sharathchandrareddy/Desktop/assignment/src/js/reducers/index.js"],"names":["FILTER_INFO","info","initialState","keyword","keys","filterInfo","state","filteredIndo","forEach","k","filter","i","matching_terms","includes","rootReducer","action","type","payload"],"mappings":"mKAAA,OAASA,WAAT,KAA4B,2BAA5B,CACA,MAAOC,CAAAA,IAAP,KAAiB,iBAAjB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBD,IAAI,CAAEA,IADa,CAEnBE,OAAO,CAAE,EAFU,CAArB,CAKA,GAAMC,CAAAA,IAAI,CAAG,CAAC,UAAD,CAAa,UAAb,CAAyB,SAAzB,CAAoC,OAApC,CAA6C,OAA7C,CAAb,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2BH,OAA3B,CAAoC,CAClC,GAAII,CAAAA,YAAY,CAAG,EAAnB,CACAH,IAAI,CAACI,OAAL,CACE,SAACC,CAAD,QACGF,CAAAA,YAAY,CAACE,CAAD,CAAZ,CAAkBP,YAAY,CAACD,IAAb,CAAkBQ,CAAlB,EAAqBC,MAArB,CAA4B,SAACC,CAAD,QAC7CA,CAAAA,CAAC,CAACC,cAAF,CAAiBC,QAAjB,CAA0BV,OAA1B,CAD6C,EAA5B,CADrB,EADF,EAMA,sCACKG,KADL,MAEEH,OAAO,CAAEA,OAFX,CAGEF,IAAI,CAAEM,YAHR,GAKD,CAED,QAASO,CAAAA,WAAT,EAAyC,IAApBR,CAAAA,KAAoB,2DAAZ,EAAY,IAARS,CAAAA,MAAQ,2CACvC,GAAIA,MAAM,CAACC,IAAP,GAAgBhB,WAApB,CAAiC,CAC/B,MAAOK,CAAAA,UAAU,CAACC,KAAD,CAAQS,MAAM,CAACE,OAAf,CAAjB,CACD,CACD,MAAOX,CAAAA,KAAP,CACD,CAED,cAAeQ,CAAAA,WAAf","sourcesContent":["import { FILTER_INFO } from \"../constants/action-types\";\nimport info from \"../../data/data\";\n\nconst initialState = {\n  info: info,\n  keyword: \"\",\n};\n\nconst keys = [\"calendar\", \"contacts\", \"dropbox\", \"slack\", \"tweet\"];\n\nfunction filterInfo(state, keyword) {\n  var filteredIndo = {};\n  keys.forEach(\n    (k) =>\n      (filteredIndo[k] = initialState.info[k].filter((i) =>\n        i.matching_terms.includes(keyword)\n      ))\n  );\n  return {\n    ...state,\n    keyword: keyword,\n    info: filteredIndo,\n  };\n}\n\nfunction rootReducer(state = {}, action) {\n  if (action.type === FILTER_INFO) {\n    return filterInfo(state, action.payload);\n  }\n  return state;\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}